/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>


// ( LAYERS ) ------------------------------------------------------------------
#define QW_M    0       // Main
#define QW_L    1       // Lower
#define QW_R    2       // Raise
#define QW_F    3       // Firmware

// ( MACROS ) ------------------------------------------------------------------
#define SCRN   LG(LS(LC(N4)))
#define SCR2   LG(LS(N4))
#define WLEFT  LA(LEFT)
#define WRIGHT LA(RIGHT)

/ {
  conditional_layers {
    compatible = "zmk,conditional-layers";
    adjust_layer {
      if-layers = <1 2>;
      then-layer = <3>;
    };
  };

  behaviors { // {{{
    qm: qwerty_mods {
      compatible = "zmk,behavior-hold-tap";
      label = "QWERTY_MODS";
      #binding-cells = <2>;
      tapping-term-ms = <200>;
      quick_tap_ms = <0>;
      flavor = "tap-preferred";
      bindings = <&kp>, <&kp>;
    };

    td_Q: tap_dance_0 {
      compatible = "zmk,behavior-tap-dance";
      label = "TAP_DANCE_Q";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp Q>, <&kp LG(W)>, <&kp LG(Q)>;
    };

    td_SCRNSHT: tap_dance_1 {
      compatible = "zmk,behavior-tap-dance";
      label = "SCRNSHT";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp SCRN>, <&kp SCR2>;
    };

    td_NEXT_PREV: tap_dance_2 {
      compatible = "zmk,behavior-tap-dance";
      label = "NEXT_PREV";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp C_NEXT>, <&kp C_PREV>;
    };
  }; // }}}

  keymap { // {{{
    compatible = "zmk,keymap";

    default_layer { // Layer 0: {{{
      bindings = <
&kp GRAV        &kp N1     &kp N2     &kp N3    &kp N4        &kp N5                            &kp N6       &kp N7        &kp N8         &kp N9        &kp N0         &kp MINUS
&kp TAB         &kp Q      &kp W      &kp E     &kp R         &kp T                             &kp Y        &kp U         &kp I          &kp O         &kp P          &kp BSLH
&qm LCTRL ESC   &kp A      &kp S      &kp D     &lt 2 F       &kp G                             &kp H        &kp J         &kp K          &kp L         &kp SEMI       &kp SQT
&kp LSHFT       &kp Z      &kp X      &kp C     &kp V         &kp B                             &kp N        &kp M         &kp COMMA      &kp DOT       &kp FSLH       &kp RSHFT
                           &kp LALT   &kp LGUI  &lt 1 SPACE   &kp F19      &mo QW_F   &mo QW_F  &kp RET      &kp SPACE     &kp BSPC       &kp DEL
      >;
      /* sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>; */
    }; // }}}

    lower_layer { //  Layer 1: {{{
      bindings = <
&trans          &kp F1     &kp F2     &kp F3    &kp F4        &kp F5                            &kp F6       &kp F7        &kp F8         &kp F9        &kp F10        &kp EQUAL
&trans          &trans     &kp WRIGHT &trans    &trans        &trans                            &trans       &trans        &trans         &kp LBKT      &kp RBKT       &trans
&trans          &trans     &trans     &trans    &trans        &trans                            &kp LEFT     &kp DOWN      &kp UP         &kp RIGHT     &trans         &trans
&trans          &trans     &trans     &trans    &trans        &kp WLEFT                         &trans       &trans        &trans         &trans        &trans         &trans
                           &kp LALT   &kp LGUI  &kp SPACE     &trans       &trans     &trans    &kp RET      &trans        &trans         &trans
      >;
    }; // }}}

    raise_layer { // Layer 2: {{{
      bindings = <
&trans          &kp F1     &kp F2     &kp F3    &kp F4        &kp F5                            &kp F6       &kp F7        &kp F8         &kp F9        &kp F10        &kp EQUAL
&trans          &trans     &kp WRIGHT &trans    &trans        &trans                            &trans       &kp C_MUTE    &kp C_VOL_DN   &kp C_VOL_UP  &td_NEXT_PREV  &kp C_PLAY_PAUSE
&trans          &trans     &trans     &trans    &trans        &trans                            &kp LEFT     &kp DOWN      &kp UP         &kp RIGHT     &trans         &trans
&trans          &trans     &trans     &trans    &trans        &kp WLEFT                         &trans       &trans        &trans         &trans        &trans         &trans
                           &kp LALT   &kp LGUI  &kp SPACE     &trans       &trans     &trans    &kp RET      &trans        &trans         &trans
      >;
    }; // }}}

    firmware_layer { // Layer 3: {{{
      bindings = <
&bt BT_SEL 0  &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &trans                             &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &trans
&bootloader   &reset       &trans       &trans       &trans       &trans                             &out OUT_BLE &out OUT_USB &out OUT_TOG &trans       &reset       &bootloader
&trans        &trans       &trans       &trans       &trans       &ext_power EP_ON                   &trans       &bt BT_PRV   &trans       &bt BT_NXT   &trans       &trans
&trans        &trans       &trans       &trans       &trans       &ext_power EP_OFF                  &trans       &trans       &trans       &trans       &kp RSHFT
                           &trans       &trans       &trans       &trans            &trans   &trans  &trans       &trans       &trans       &bt BT_CLR
      >;
    }; // }}}
  }; // }}}
};


// vim:ft=keymap:foldenable:foldmethod=marker:ts=2:sts=2:sw=2
