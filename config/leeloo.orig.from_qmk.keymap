/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
#include <behaviors.dtsi>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

// Layers
#define QW_M    0       // Main
#define QW_L    1       // Lower
#define QW_R    2       // Raise
#define QW_A    3       // Adjust
#define QW_F    4       // Firmware

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        adjust_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    behaviors {
        qm: qwerty_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "QWERTY_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <0>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
        };

        td_Q: tap_dance_Q {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_Q";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp Q>, <&kp LG(W)>, <&kp LG(Q)>;
        };

    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp GRAV      &kp N1     &kp N2     &kp N3     &kp N4     &kp N5                           &kp N6     &kp N7     &kp N8     &kp N9     &kp N0     &kp MINUS
&kp TAB       &td_Q      &kp W      &kp E      &kp R      &kp T                            &kp Y      &kp U      &kp I      &kp O      &kp P      &kp BSLH
&qm LCTRL ESC &kp A      &kp S      &kp D      &lt 1 F    &kp G                            &kp H      &kp J      &kp K      &kp L      &kp SEMI   &kp SQT
&kp LSHFT     &kp Z      &kp X      &kp C      &kp V      &kp B                            &kp N      &kp M      &kp COMMA  &kp DOT    &kp FSLH   &kp RSHFT
                    &kp LCTRL   &kp LALT  &lt 1 LGUI    &lt 2 SPACE  &kp F19   &mo QW_F  &lt 2 RET   &lt 1 SPACE  &kp BSPC   &kp DEL
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        lower_layer {
            bindings = <
&trans     &trans     &trans     &trans     &trans     &trans                           &trans     &trans     &trans     &trans     &trans     &trans
&trans     &trans     &trans     &trans     &trans     &trans                           &trans     &trans     &trans     &trans     &trans     &trans
&trans     &trans     &kp LT     &kp LPAR   &kp LBKT   &kp LBRC                         &kp RBRC   &kp RBKT   &kp RPAR   &kp GT     &trans     &trans
&trans     &trans     &trans     &trans     &trans     &trans                           &trans     &trans     &trans     &trans     &trans     &trans
                      &trans     &trans     &trans     &trans     &trans      &trans    &trans     &trans     &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        raise_layer {
            bindings = <
&trans     &trans     &trans     &trans     &trans     &trans                           &trans     &trans     &trans     &trans     &trans     &kp EQUAL
&trans     &trans     &kp LA(LEFT) &trans   &trans     &trans                           &trans     &trans     &trans     &kp LBRC   &kp RBRC   &trans
&trans     &trans     &trans     &trans     &trans     &trans                           &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT  &trans     &trans
&trans     &trans     &trans     &trans     &trans     &kp LA(RIGHT)                    &trans     &trans     &trans     &trans     &trans     &trans
                      &trans     &trans     &trans     &trans     &trans      &trans    &trans     &trans     &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        adjust_layer {
            bindings = <
&trans     &kp F1     &kp F2     &kp F3     &kp F4     &kp F5                           &kp F6     &kp F7     &kp F8     &kp F9     &kp F10    &kp F11
&trans     &trans     &trans     &trans     &trans     &trans                           &trans     &trans     &trans     &trans     &trans     &kp F12
&trans     &trans     &trans     &trans     &trans     &trans                           &trans     &trans     &trans     &trans     &trans     &trans
&trans     &trans     &trans     &trans     &trans     &trans                           &trans     &trans     &trans     &trans     &trans     &trans
                      &trans     &trans     &trans     &trans     &trans      &trans    &trans     &trans     &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        firmware_layer {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans            &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans
&bootloader &reset    &trans     &trans     &trans     &trans                           &out OUT_BLE &out OUT_USB &out OUT_TOG &trans     &reset     &bootloader
&trans      &trans    &trans     &trans     &trans     &ext_power EP_ON                 &trans       &bt BT_PRV   &trans       &bt BT_NXT &trans     &trans
&trans      &trans    &trans     &trans     &trans     &ext_power EP_OFF                &trans       &trans       &trans       &trans     &trans     &kp RSHFT
                      &trans     &trans     &trans     &trans     &trans      &trans    &trans       &trans       &bt BT_CLR   &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };
    };
};
